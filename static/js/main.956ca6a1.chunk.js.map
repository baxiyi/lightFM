{"version":3,"sources":["pages/Index/index.less","store/types/index.js","services/avInit.js","services/config.js","utils/shuffle.js","services/songServices.js","services/index.js","services/userServices.js","store/reducers/users.js","store/reducers/snackbar.js","store/reducers/drawer.js","store/reducers/songs.js","store/reducers/index.js","store/index.js","pages/Login/index.js","pages/Guide/index.js","pages/Index/index.js","pages/Search/index.js","pages/Dislike/index.js","components/Snackbar/index.js","components/Audio/index.js","components/MenuDrawer/index.js","router/index.js","serviceWorker.js","index.js","pages/Login/index.less","pages/Search/index.less","components/MenuDrawer/index.less","pages/Guide/index.less","pages/Dislike/index.less"],"names":["module","exports","SONG_CHANGE","SNACKBAR_CHANGE","DRAWER_CHANGE","AV","init","appId","appKey","arr","input","i","length","randomIndex","Math","floor","random","temp","songServices","search","userId","query","type","limit","this","fetchCollectSongs","then","res","map","obj","songId","userCollectSongsId","params","URLSearchParams","append","axios","method","headers","url","data","code","result","songs","isCollect","indexOf","id","fetchSongCatg","Query","find","attributes","fetchSongCatgByUserId","equalTo","findSongBySongid","songid","findSongBySongidArr","songidArr","songidQuery","or","addSong","songInfo","Song","Object","extend","existSongs","song","set","name","artists","artist","join","album","picUrl","public","quality","save","addCatgRelation","catgArr","songObjId","promises","catgId","Promise","resolve","reject","relCatgSong","catch","err","all","deleteUserCatgRelations","destroyAll","addUserCatgRelations","catg","relUserCatg","fetchCollectSongsId","fetchDislikeSongId","fetchSongsIdByCatgId","catgIdArr","queryArr","dislikeSong","rel_user_song_dislike","undoDislikeSong","songObjIdArr","collectSong","a","createWithoutData","destroy","Rel_user_collect","rel_user_collect","fetchQualitySongs","dislikesongIdArr","filter","shuffle","fetchCustomiseSongs","songIdArr","songQueryArr","disableShuffle","songQuery","fetchDislikeSongs","userServices","regist","userInfo","user","User","setUsername","username","setPassword","password","signUp","login","logIn","logout","logOut","getCurrentUser","current","checkIsLogin","checkIsSuperUser","currentUser","Services","initState","open","vertical","horizontal","msg","seconds","left","bottom","songList","activeIndex","qualitySongList","customiseSongList","collectSongList","isPlay","combineReducers","users","state","action","assign","snackbar","drawer","store","createStore","Login","props","dispatch","trim","test","flag","checkResult","validateInput","console","log","history","push","e","setState","target","value","className","styles","container","bgImg","cover","content","logoBox","form","Grid","spacing","alignItems","item","xs","icon","TextField","color","fullWidth","label","required","onChange","onUsernameChange","bind","style","marginTop","onPasswordChange","btnBox","btn","Button","variant","onClick","PureComponent","withRouter","connect","Guide","catgList","arrIds","isSelect","title","list","List","index","ListItem","key","dense","button","onTagSelectChange","Checkbox","checked","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","marginRight","customiseFM","enterFM","Component","Index","fmType","match","activeChannelTotal","channelName","setTimeout","fetchSongList","menuState","isShow","splice","unshift","author","pic","menuBox","openMenu","bg","backgroundImage","contentWrap","songPic","zRotate","control","togglePlay","controlBox","panelBox","onDislikeSong","onToggleCollect","iconLoveActive","onPlayNext","Search","searchTxt","searchType","collectSongs","collectSongids","trimLeft","getWithCollectList","songIndex","stopPropagation","preventDefault","dispath","toString","slice","searchBox","inputWrap","onInput","onSearchInput","margin","searchSong","cardWrap","listBox","Avatar","alt","src","getAuthorName","iconLoveNormal","href","download","Dislike","checkedIds","dislikeList","handleToggle","currentIndex","newChecked","reshowDislikeSongs","PositionedSnackbar","timer","Snackbar","anchorOrigin","onClose","handleClose","ContentProps","message","Audio","audio","play","pause","ref","music","onEnded","onAudioEnded","MenuDrawer","toggleDrawer","toggleChannelItem","info","mapper","0","path","1","2","showSnackbar","sideList","component","Collapse","in","timeout","unmountOnExit","disablePadding","changeChannel","inset","to","link","openSettings","Drawer","role","onKeyDown","withStyles","width","fullList","PrimaryLayout","isLogin","exact","render","App","Boolean","window","location","hostname","theme","createMuiTheme","palette","light","main","dark","contrastText","secondary","ReactDOM","MuiThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.956ca6a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_5ndjgEEDo8Z1f-cZsMaSk\",\"content\":\"_1bwGa607JKi67B0rkpfdqm\",\"bg\":\"_17c3kmDN40wTICXm2bbvig\",\"cover\":\"Se66MHMm049tWO1QLnjj5\",\"contentWrap\":\"_1KFaCNTY4Z5mf2qCSuCvGh\",\"menuBox\":\"_15SFmFU6chdz8NY_-e7g1V\",\"icon\":\"a44dFx5Et3Qqs7ocAulLt\",\"songPic\":\"Uq2HC9NVKm-MUog7WDOWh\",\"pic\":\"_23rhWghTHg4thxy6g7qBc-\",\"zRotate\":\"Y7VbsMFAapkZgHJYztPuZ\",\"rotate\":\"_2qQ0x6LTUVJpKxUg9bOy7i\",\"control\":\"_1jVEp-_FtO5tnk49tFqUrB\",\"name\":\"_2ktMKbKYOT6_xDHBnlpj_o\",\"author\":\"_2V3Uoj_790kkjMpfdWhQG9\",\"controlBox\":\"_2q8nQKKu61a8URNnn3As--\",\"panelBox\":\"ky7GqmtJj7Ln77fW5MMHc\",\"item\":\"pDr386wJk44FjMhlDTpzb\",\"iconLoveActive\":\"_2gktC6RQE9ZMuWNVianMpz\"};","export const SONG_CHANGE = 'SONG_CHANGE';\nexport const USER_CHANGE = 'USER_CHANGE';\nexport const SNACKBAR_CHANGE = 'SNACKBAR_CHANGE';\nexport const DRAWER_CHANGE = 'DRAWER_CHANGE';","import AV from 'leancloud-storage'\nimport {APP_ID, APP_KEY} from './config'\n\nAV.init({\n    appId: APP_ID,\n    appKey: APP_KEY\n});\n\nexport default AV;","export const APP_ID = 'HmduPEaPPVq2HTxv5GMacXly-gzGzoHsz';\nexport const APP_KEY = 'XzhOqo1iVBtcryb8NTifcYOQ';\n//export const SUPER_USER_OBJECT_ID = '5ad2c44b44d904005ca188de';\nexport const MUSIC_PROVIDER_HOST = '/api';\n\n","export default arr => {\n    let input = arr;\n    for(let i = input.length - 1; i>=0; i--){\n        let randomIndex = Math.floor(Math.random()*(i+1));\n        let temp = input[randomIndex];\n        input[randomIndex] = input[i];\n        input[i]=temp;\n    }\n    return input;\n}\n","import axios from 'axios';\nimport AV from './avInit';\nimport {MUSIC_PROVIDER_HOST} from './config';\nimport shuffle from '../utils/shuffle'\n\n\n\nexport default {\n    \n    //搜索音乐：调用网易云音乐api\n    async search(userId, query, type, limit){\n        let userCollectSongsId = await this.fetchCollectSongs(userId).then(res => {\n            return res.map(obj => obj.songId);\n        })\n        let params = new URLSearchParams();\n        params.append(\"s\", query);\n        params.append(\"type\", type);\n        params.append(\"limit\", limit || 40);\n        return axios({\n            method: \"post\",\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            },\n            url: `${MUSIC_PROVIDER_HOST}/search/pc`,\n            data: params\n        }).then(res => {\n            const code = res.data.code;\n            let songs = [];\n            if(code === 200){\n                songs = res.data.result.songs;\n                songs = songs.map(obj => {\n                    return {\n                        ...obj,\n                        isCollect: userCollectSongsId.indexOf(obj.id) !== -1\n                    }\n                });\n                return songs;\n            }\n            else{\n                return [];\n            }\n        })\n\n    },\n\n    //获取歌曲类别列表\n    fetchSongCatg(){\n        let query = new AV.Query(\"Category\");\n        return query.find().then(res => {\n            return res.map(obj => {\n                return {\n                    ...obj.attributes,\n                    id: obj.id\n                }\n            })\n        })\n    },\n\n    //获取用户定制标签\n    fetchSongCatgByUserId(userId){\n        let query = new AV.Query(\"Rel_user_category\");\n        query.equalTo(\"userId\",userId);\n        return query.find().then(res => {\n            return res.map(obj => {\n                return {\n                    ...obj.attributes,\n                    id: obj.id\n                }\n            })\n        })\n    },\n\n    //根据songid查询歌曲\n    findSongBySongid(songid){\n        let query = new AV.Query(\"Song\");\n        query.equalTo(\"songid\",songid);\n        return query.find();\n    },\n\n    //根据songid数组查询歌曲\n    findSongBySongidArr(songidArr){\n        let songidQuery = songidArr.map(songid => {\n            let temp = new AV.Query(\"Song\");\n            temp.equalTo(\"songid\",songid);\n            return temp;\n        });\n        let query = AV.Query.or(...songidQuery);\n        return query.find();\n    },\n\n    //添加歌曲\n    async addSong(songInfo){\n        let Song = AV.Object.extend(\"Song\");\n        let existSongs = await this.findSongBySongid(songInfo.id);\n        if(!existSongs.length){\n            let song = new Song();\n            song.set('name', songInfo.name);\n            song.set('author', songInfo.artists.map(artist => artist.name).join(','));\n            song.set(\"pic\", songInfo.album.picUrl);\n            song.set(\"music\", `https://music.163.com/song/media/outer/url?id=${songInfo.id}.mp3`);\n            song.set(\"link\", `http://music.163.com/#/song?id=${songInfo.id}`);\n            song.set(\"type\", songInfo.type || 'netease');\n            song.set(\"songid\", songInfo.id);\n            song.set(\"public\", songInfo.public || 1);\n            song.set(\"quality\", songInfo.quality || 1);\n            return song.save();\n        }else{\n            return existSongs[0];\n        }\n    },\n\n    //添加歌曲类别和歌曲关系\n    addCatgRelation(catgArr, songObjId){\n        let promises = catgArr.map(catgId => {\n            return new Promise((resolve, reject) => {\n                let RelCatgSong = AV.Object.extend(\"Rel_category_song\");\n                let relCatgSong = new RelCatgSong();\n                relCatgSong.set('catgId', catgId);\n                relCatgSong.set('songId', songObjId);\n                relCatgSong.save().then(res => {\n                    if(res.id)\n                        resolve(res);\n                    else\n                        reject();\n                }).catch(err => {\n                    reject();\n                })\n            })\n        })\n        return Promise.all(promises);\n    },\n\n    //删除用户定制歌曲类别\n    deleteUserCatgRelations(userId){\n        let query = new AV.Query(\"Rel_user_category\");\n        query.equalTo(\"userId\",userId);\n        return query.find().then(res => {\n            if(res){\n                AV.Object.destroyAll(res);\n            }\n        })\n    },\n\n    //添加用户定制歌曲类别\n    async addUserCatgRelations(catgArr, userId){\n        await this.deleteUserCatgRelations(userId);\n        let promises = catgArr.map(catg => {\n            return new Promise((resolve, reject) => {\n                let RelUserCatg = AV.Object.extend(\"Rel_user_category\");\n                let relUserCatg = new RelUserCatg();\n                relUserCatg.set(\"userId\",userId);\n                relUserCatg.set(\"catgId\",catg.id);\n                relUserCatg.save().then(res => {\n                    if(res.id){\n                        resolve(res);\n                    }\n                    else{\n                        reject();\n                    }\n                }).catch(err => {\n                    reject();\n                })\n            })\n            \n        });\n        return Promise.all(promises);\n    },\n\n    //获取用户喜欢歌曲id列表\n    fetchCollectSongsId(userId){\n        let query = new AV.Query(\"Rel_user_collect\");\n        query.equalTo(\"userId\",userId);\n        return query.find().then(res => {\n            return res.map(obj => obj.attributes.songId);\n        })\n    },\n\n    //获取用户不喜欢的歌曲id列表\n    fetchDislikeSongId(userId){\n        let query = new AV.Query(\"Rel_user_song_dislike\");\n        query.equalTo(\"userId\",userId);\n        return query.find().then(res => {\n            return res.map(obj => obj.attributes.songId);\n        })\n    },\n\n    //根据歌曲类别获取歌曲id列表\n    fetchSongsIdByCatgId(catgIdArr){\n        let queryArr = catgIdArr.map(catgId => {\n            let temp = new AV.Query(\"Rel_category_song\");\n            temp.equalTo(\"catgId\",catgId);\n            return temp;\n        });\n        let query = AV.Query.or(...queryArr);\n        return query.find().then(res => {\n            return res.map(obj => obj.attributes.songId);\n        })\n    },\n\n    //将歌曲移入用户黑名单\n    dislikeSong(userId,songObjId){\n        let Rel_user_song_dislike = AV.Object.extend(\"Rel_user_song_dislike\");\n        let rel_user_song_dislike = new Rel_user_song_dislike();\n        rel_user_song_dislike.set(\"userId\",userId);\n        rel_user_song_dislike.set(\"songId\",songObjId);\n        return rel_user_song_dislike.save();\n    },\n\n    //将若干歌曲移除用户黑名单\n    undoDislikeSong(userId,songObjIdArr){\n        let queryArr = songObjIdArr.map(songObjId => {\n            let temp = new AV.Query(\"Rel_user_song_dislike\");\n            temp.equalTo(\"userId\",userId);\n            temp.equalTo(\"songId\",songObjId);\n            return temp;\n        });\n        let query = AV.Query.or(...queryArr);\n        return query.find().then(res => {\n            return AV.Object.destroyAll(res);\n        })\n    },\n\n    //用户收藏或取消收藏歌曲\n    collectSong(userId, songObjId){\n        let query = new AV.Query(\"Rel_user_collect\");\n        query.equalTo(\"userId\",userId);\n        query.equalTo(\"songId\",songObjId);\n        return query.find().then(async res => {\n            if(res.length){\n                //取消收藏\n                let collectSong = AV.Object.createWithoutData(\"Rel_user_collect\",res[0].id);\n                await collectSong.destroy();\n                return {\n                    id: res[0].id,\n                    isCollect: false\n                }\n            }\n            else{\n                //收藏\n                let Rel_user_collect = AV.Object.extend(\"Rel_user_collect\");\n                let rel_user_collect = new Rel_user_collect();\n                rel_user_collect.set(\"userId\",userId);\n                rel_user_collect.set(\"songId\",songObjId);\n                await rel_user_collect.save();\n                return {\n                    id: userId,\n                    isCollect: true\n                }\n            }\n        })\n    },\n\n    //获取精选歌曲列表: 除去用户不喜欢的歌曲，再用shuffle函数随机打乱\n    async fetchQualitySongs(userId){\n        let dislikesongIdArr = await this.fetchDislikeSongId(userId);\n        let userCollectSongsId = await this.fetchCollectSongsId(userId);\n        let query = new AV.Query(\"Song\");\n        query.equalTo(\"public\", 1);\n        query.equalTo(\"quality\", 1);\n        query.limit(500);\n        return query.find().then(res => {\n            res = res.map(obj => {\n                return {\n                    ...obj.attributes,\n                    id: obj.id,\n                    isCollect: userCollectSongsId.indexOf(obj.id) !== -1\n                }\n            });\n            res = res.filter(obj => {\n                return dislikesongIdArr.indexOf(obj.id) === -1;\n            });\n            return shuffle(res);\n        });\n    },\n\n    //获取用户定制的歌曲列表\n    async fetchCustomiseSongs(userId){\n        let query = new AV.Query(\"Rel_user_category\");\n        query.equalTo(\"userId\",userId);\n        let catgIdArr = await query.find().then(res => {\n            return res.map(obj => obj.attributes.catgId);\n        });\n        let dislikesongIdArr = await this.fetchDislikeSongId(userId);\n        let userCollectSongsId = await this.fetchCollectSongsId(userId);\n        if(catgIdArr.length){\n            let songIdArr = await this.fetchSongsIdByCatgId(catgIdArr);\n            if(!songIdArr.length)\n                return [];\n            let songQueryArr = songIdArr.map(songId => {\n                let temp = new AV.Query(\"Song\");\n                temp.equalTo(\"objectId\", songId);\n                return temp;\n            })\n            let query = AV.Query.or(...songQueryArr);\n            query.limit(500);\n            return query.find().then(res => {\n                res = res.map(obj => {\n                    return {\n                        ...obj.attributes,\n                        id: obj.id,\n                        isCollect: userCollectSongsId.indexOf(obj.id) !== -1\n                    }\n                });\n                res = res.filter(obj => {\n                    return dislikesongIdArr.indexOf(obj.id) === -1;\n                });\n                return shuffle(res);\n            })\n        }\n        else\n            return [];\n    },\n\n    //获取用户收藏歌曲列表\n    async fetchCollectSongs(userId, disableShuffle = false){\n        let userCollectSongsId = await this.fetchCollectSongsId(userId);\n        if(!userCollectSongsId.length)\n            return [];\n        let songQuery = userCollectSongsId.map(songId => {\n            let temp = new AV.Query(\"Song\");\n            temp.equalTo(\"objectId\", songId);\n            return temp;\n        });\n        let query = AV.Query.or(...songQuery);\n        query.limit(500);\n        return query.find().then(res => {\n            res = res.map(obj => {\n                return {\n                    ...obj.attributes,\n                    id: obj.id,\n                    isCollect: true\n                }\n            });\n            if(disableShuffle)\n                return res;\n            else\n                return shuffle(res);\n        });\n        \n    },\n\n    //获取用户不喜欢的列表\n    async fetchDislikeSongs(userId){\n        let dislikesongIdArr = await this.fetchDislikeSongId(userId);\n        if(dislikesongIdArr.length){\n            let songQuery = dislikesongIdArr.map(songId => {\n                let temp = new AV.Query(\"Song\");\n                temp.equalTo(\"objectId\", songId);\n                return temp;\n            });\n            let query = AV.Query.or(...songQuery);\n            query.limit(500);\n            return query.find().then(res => {\n                res = res.map(obj => {\n                    return {\n                        ...obj.attributes,\n                        id: obj.id\n                    }\n                });\n                return res;\n            })\n        }else{\n            return [];\n        }\n    }\n\n\n}","import songServices from './songServices';\nimport userServices from './userServices';\n\nexport default {\n  songServices,\n  userServices,\n}","import AV from './avInit';\n\nexport default {\n  //注册\n  regist(userInfo) {\n    let user = new AV.User();\n    user.setUsername(userInfo.username);\n    user.setPassword(userInfo.password);\n    return user.signUp();\n  },\n\n  //登录\n  login(userInfo) {\n    return AV.User.logIn(userInfo.username, userInfo.password);\n  },\n\n  //登出\n  logout(){\n    return AV.User.logOut();\n  },\n\n  //获取当前用户信息\n  getCurrentUser() {\n    return AV.User.current();\n  },\n\n  //判断是否处于登录状态\n  checkIsLogin() {\n    const currentUser = this.getCurrentUser();\n    return currentUser ? true : false;\n  },\n\n  checkIsSuperUser() {\n    return false;\n  }\n\n}","import {USER_CHANGE} from '../types/index';\nimport Services from '../../services';\n\nconst currentUser = Services.userServices.getCurrentUser();\nconst userId = currentUser && currentUser.id;\nconst initState = {\n  userId: userId,\n}\n\nexport default function(state = initState, action){\n  switch(action.type){\n    case USER_CHANGE:\n      return {\n        ...Object.assign(initState, action.users),\n      }\n    default:\n      return state;\n  }\n}","import {SNACKBAR_CHANGE} from '../types/index';\n\nconst initState = {\n  open: false,\n  vertical: 'top',\n  horizontal: 'center',\n  msg: 'message',\n  seconds: 2000,\n}\n\nexport default function(state = initState, action){\n  switch(action.type){\n    case SNACKBAR_CHANGE:\n      return {\n        ...Object.assign(initState, action.snackbar),\n      }\n    default:\n      return state;\n  }\n}","import {DRAWER_CHANGE} from '../types/index';\n\nconst initState = {\n  left: false,\n  bottom: false,\n};\n\nexport default function(state = initState, action){\n  switch(action.type){\n    case DRAWER_CHANGE:\n      return {\n        ...Object.assign(initState, action.drawer),\n      };\n    default:\n      return state;\n  }\n}","import {SONG_CHANGE} from '../types/index';\n\nconst initState = {\n  songList: [],\n  activeIndex: 0,\n  qualitySongList: [],\n  customiseSongList: [],\n  collectSongList: [],\n  isPlay: false,\n}\n\nexport default function(state = initState, action){\n  switch(action.type){\n    case SONG_CHANGE:\n      return {\n        ...Object.assign(initState, action.songs),\n      };\n    default:\n      return state;\n  }\n}","import {combineReducers} from 'redux';\nimport users from './users';\nimport snackbar from './snackbar';\nimport drawer from './drawer';\nimport songs from './songs';\n\nexport default combineReducers({\n  users,\n  songs,\n  snackbar,\n  drawer,\n})","import {createStore} from 'redux';\nimport combineReducers from './reducers';\n\nlet store = createStore(combineReducers);\n\nexport default store;","import React, {PureComponent} from 'react';\nimport {connect} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport store from '../../store/index';\nimport {SNACKBAR_CHANGE, USER_CHANGE} from '../../store/types';\nimport Services from '../../services/index';\nimport {withRouter} from 'react-router';\nimport styles from './index.less';\n\nclass Login extends PureComponent{\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      open: false,\n      vertical: null,\n      horizontal: null,\n    }\n  }\n\n  componentDidMount() {\n    store.dispatch({\n      type: SNACKBAR_CHANGE,\n      snackbar: {\n        open: true,\n        msg: \"Username:myFM Password:myFM\",\n        seconds: 5000,\n      }\n    });\n  }\n\n  validateInput() {\n    const username = this.state.username.trim();\n    const password = this.state.password.trim();\n    if(!username.trim()){\n      return {\n        flag: false,\n        msg: '请输入用户名',\n      }\n    }\n    if(!password.trim()){\n      return {\n        flag: false,\n        msg: '请输入密码',\n      }\n    }\n    if(!/^[a-zA-Z0-9_]{4,8}$/.test(username)){\n      return {\n        flag: false,\n        msg: \"用户名必须为4到8位大小写字母，数字或_组成\",\n        seconds: 4000,\n      }\n    }\n    if(!/^[a-zA-Z0-9_]{4,8}$/.test(password)){\n      return {\n        flag: false,\n        msg: \"密码必须为4到8位大小写字母，数字或_组成\",\n        seconds: 4000,\n      }\n    }\n    return {flag: true};\n  }\n\n  login(){\n    const checkResult = this.validateInput();\n    if(!checkResult.flag){\n      store.dispatch({\n        type: SNACKBAR_CHANGE,\n        snackbar:{\n          open: true,\n          msg: checkResult.msg,\n          seconds: checkResult.seconds ? checkResult.seconds : 2000,\n        }\n      });\n      console.log('cannot login');\n      return;\n    }\n    Services.userServices.login({username: this.state.username, password: this.state.password})\n      .then(res => {\n        if(res.id) {\n          store.dispatch({\n            type: SNACKBAR_CHANGE,\n            snackbar: {\n              open: true,\n              msg: '登录成功',\n            }\n          });\n          store.dispatch({\n            type: USER_CHANGE,\n            users: {\n              userId: res.id,\n            }\n          });\n          this.props.history.push('/guide');\n        } else {\n          store.dispatch({\n            type: SNACKBAR_CHANGE,\n            snackbar: {\n              open: true,\n              msg: '登录失败',\n            }\n          })\n        }\n      }).catch(err => {\n        console.log(err);\n      })\n  }\n\n  regist() {\n    const checkResult = this.validateInput();\n    if(!checkResult.flag){\n      store.dispatch({\n        type: SNACKBAR_CHANGE,\n        snackbar:{\n          open: true,\n          msg: checkResult.msg,\n          seconds: checkResult.seconds ? checkResult.seconds : 2000,\n        }\n      });\n      return;\n    }\n    Services.userServices.regist({\n      username: this.state.username,\n      password: this.state.password,\n    })\n      .then(res => {\n        if(res.id) {\n          store.dispatch({\n            type: SNACKBAR_CHANGE,\n            snackbar: {\n                open: true,\n                msg: \"注册成功\"\n            }\n          })\n          store.dispatch({\n            type: USER_CHANGE,\n            users: {\n                userId: res.id\n            }\n          })\n          this.props.history.push(\"/guide\");\n        } else {\n          store.dispatch({\n            type: SNACKBAR_CHANGE,\n            snackbar: {\n                open: true,\n                msg: \"注册失败\"\n            }\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      })\n  }\n\n  onUsernameChange(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onPasswordChange(e) {\n    this.setState({\n      password: e.target.value,\n    })\n  }\n\n  render(){\n    return (\n      <div className={styles.container}>\n        <div className={styles.bgImg}></div>\n        <div className={styles.cover}></div>\n        <div className={styles.content}>\n          <div className={styles.logoBox}>\n            私人FM\n          </div>\n          <div className={styles.form}>\n            <div>\n              <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item xs={2}>\n                  <span className={`iconfont icon-user ${styles.icon}`}></span>\n                </Grid>\n                <Grid item xs={10}>\n                  <TextField color=\"#fff\" fullWidth id=\"inptut-with-icon-grid\" label=\"用户名\" required\n                    onChange={this.onUsernameChange.bind(this)}\n                  ></TextField>\n                </Grid>\n              </Grid>\n            </div>\n            <div style={{marginTop: '10px'}}>\n              <Grid container spacing={8} alignItems=\"flex-end\">\n                <Grid item xs={2}>\n                  <span className={`iconfont icon-password ${styles.icon}`}></span>\n                </Grid>\n                <Grid item xs={10}>\n                  <TextField color=\"#fff\" fullWidth type=\"password\" id=\"input-with-icon-grid\" required\n                    label=\"密码\" onChange={this.onPasswordChange.bind(this)}\n                  ></TextField>\n                </Grid>\n              </Grid>\n            </div>\n            <div className={styles.btnBox}>\n              <span className={styles.btn}>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.login.bind(this)}>\n                  登录\n                </Button>\n              </span>\n              <span className={styles.btn}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.regist.bind(this)}>\n                    注册\n                </Button>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    snackbar: store.snackbar,\n    users: store.users,\n  }\n}\n\nLogin = withRouter(Login);\n\nexport default connect(mapStateToProps)(Login);","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Services from '../../services/index';\nimport {List, ListItem, ListItemSecondaryAction, ListItemText} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport store from '../../store/index';\nimport {SNACKBAR_CHANGE} from '../../store/types/index';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport styles from './index.less';\n\n//这里不能用PureComponent，因为涉及到数组内部变化，PureComponent的浅层变化比较不出来\nclass Guide extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      catgList: [],\n    };\n  }\n\n  async fetchSongCatgByUserId(userId) {\n    let arr = await Services.songServices.fetchSongCatgByUserId(userId);\n    let arrIds = arr.map(item => item.catgId);\n    Services.songServices.fetchSongCatg().then(res => {\n      this.setState({\n        catgList: res.map(obj => {\n          return {\n            ...obj,\n            isSelect: arrIds.indexOf(obj.id) !== -1 ? true : false,\n          }\n        })\n      })\n    })\n  }\n\n  componentDidMount() {\n    const {userId} = this.props.users;\n    this.fetchSongCatgByUserId(userId);\n  }\n\n  onTagSelectChange(value) {\n    let arr = this.state.catgList;\n    arr[value].isSelect = !arr[value].isSelect;\n    this.setState({\n      catgList: arr,\n    });\n  }\n\n  customiseFM() {\n    const currentUser = Services.userServices.getCurrentUser();\n    const userId = currentUser && currentUser.id;\n    const catgArr = this.state.catgList.filter(catg => {\n      return catg.isSelect;\n    });\n    if(!catgArr.length){\n      store.dispatch({\n        type :SNACKBAR_CHANGE,\n        snackbar: {\n          open: true,\n          msg: '请至少选择一个标签',\n        }\n      });\n      return;\n    }\n    if(!userId) {\n      store.dispatch({\n        type :SNACKBAR_CHANGE,\n        snackbar: {\n          open: true,\n          msg: '登录超时!',\n        }\n      });\n      return;\n    }\n    Services.songServices.addUserCatgRelations(catgArr, userId)\n      .then(res => {\n        if(res.length) {\n          store.dispatch({\n            type: SNACKBAR_CHANGE,\n            snackbar :{\n              open: true,\n              msg: '定制私人FM成功',\n            }\n          });\n          this.props.history.push('/index/customise');\n        } else {\n          store.dispatch({\n            type: SNACKBAR_CHANGE,\n            snackbar :{\n              open: true,\n              msg: '定制失败',\n            }\n          });\n        }\n      })\n  }\n\n  enterFM() {\n    const currentUser = Services.userServices.getCurrentUser();\n    const userId = currentUser && currentUser.id;\n    const catgArr = this.state.catgList.filter(catg => {\n      return catg.isSelect;\n    });\n    if(catgArr.length) {\n      Services.songServices.addUserCatgRelations(catgArr, userId);\n    }\n    this.props.history.push('/index/quality');\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <h3 className={styles.title}>您的喜好是什么呢？</h3>\n        <div className={styles.list}>\n          <List>\n            {this.state.catgList.map((item, index) => (\n              <ListItem\n                key={index}\n                dense\n                button\n                onClick={this.onTagSelectChange.bind(this, index)}\n              >\n                <Checkbox\n                  checked={item.isSelect}\n                  tabIndex={-1}\n                  disableRipple\n                />\n                <ListItemText primary={item.name} />\n                <ListItemSecondaryAction>\n                  <span className={`iconfont icon-tag ${styles.icon}`}></span>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </div>\n        <div className=\"f-tc f-mgt30\">\n          <Button style={{marginRight: '10px'}} variant=\"contained\" color=\"primary\"\n            onClick={this.customiseFM.bind(this)}\n          >\n            进入FM\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\" \n            onClick={this.enterFM.bind(this)}\n          >\n            随便听听\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    users: store.users,\n  }\n}\n\nGuide = withRouter(Guide);\n\nexport default connect(mapStateToProps)(Guide);","import React, {PureComponent} from 'react';\nimport Services from '../../services/index';\nimport {connect} from 'react-redux';\nimport store from '../../store/index';\nimport {DRAWER_CHANGE, SNACKBAR_CHANGE, SONG_CHANGE} from '../../store/types/index';\nimport styles from './index.less';\n\nclass Index extends PureComponent{\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props.songs,\n    }\n  }\n\n  async fetchCustomiseSongs() {\n    const {userId} = this.props.users;\n    return Services.songServices.fetchCustomiseSongs(userId);\n  }\n\n  async fetchQualitySongs() {\n    const {userId} = this.props.users;\n    return Services.songServices.fetchQualitySongs(userId)\n  }\n\n  async fetchCollectSongs() {\n    const {userId} = this.props.users;\n    return Services.songServices.fetchCollectSongs(userId);\n  }\n\n  async fetchSongList() {\n    const {songList} = this.props.songs;\n    const fmType = this.props.match && this.props.match.params.fmType;\n    let qualitySongList = [];\n    let customiseSongList = [];\n    let collectSongList = [];\n    let activeChannelTotal = 0;\n    let channelName = '';\n\n    if(!songList.length) {\n      qualitySongList = await this.fetchQualitySongs();\n      customiseSongList = await this.fetchCustomiseSongs();\n      collectSongList = await this.fetchCollectSongs();\n      switch (fmType) {\n        case 'quality':\n          activeChannelTotal = qualitySongList.length;\n          channelName = '精选FMHz';\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: qualitySongList,\n            }\n          });\n          break;\n        case 'customise':\n          activeChannelTotal = customiseSongList.length;\n          channelName = '私人FMHz';\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: customiseSongList,\n            }\n          });\n          break;\n        case 'collect':\n          activeChannelTotal = collectSongList.length;\n          channelName = '红心FMHz';\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: collectSongList,\n            }\n          });\n          break;\n        default:\n          activeChannelTotal = qualitySongList.length;\n          channelName = '精选FMHz';\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: qualitySongList,\n            }\n          })\n          break;\n      }\n      store.dispatch({\n        type: SONG_CHANGE,\n        songs: {\n          qualitySongList,\n          customiseSongList,\n          collectSongList,\n        }\n      })\n    } else {\n      collectSongList = await this.fetchCollectSongs();\n      switch (fmType) {\n        case 'quality':\n          qualitySongList = await this.fetchQualitySongs();\n          activeChannelTotal = qualitySongList.length;\n          channelName = '精选FMHz';\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              qualitySongList,\n              collectSongList,\n            }\n          });\n          break;\n        case 'customise':\n          customiseSongList = await this.fetchCustomiseSongs();\n          activeChannelTotal = customiseSongList.length;\n          channelName = '私人FMHz';\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              customiseSongList,\n              collectSongList,\n            }\n          });\n          break;\n        case 'collect':\n          activeChannelTotal = collectSongList.length;\n          channelName = '红心FMHz';\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: collectSongList,\n              collectSongList,\n            }\n          });\n          break;\n        default:\n          qualitySongList = await this.fetchQualitySongs();\n          activeChannelTotal = qualitySongList.length;\n          channelName = '精选FMHz';\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              qualitySongList,\n              collectSongList,\n            }\n          });\n          break;\n      }\n    }\n    setTimeout(() => {\n      store.dispatch({\n        type: SNACKBAR_CHANGE,\n        snackbar: {\n          open: true,\n          msg: `当前${channelName}共${activeChannelTotal}首歌`\n        }\n      })\n    }, 0);\n  }\n\n  componentDidMount() {\n    this.fetchSongList();\n  }\n\n  getInitState() {\n    return {};\n  }\n\n  toggleMenu() {\n    this.setState({\n      menuState: Object.assign({}, this.state.menuState, {\n        isShow: !this.state.menuState,\n      })\n    })\n  }\n\n  openMenu() {\n    store.dispatch({\n      type: DRAWER_CHANGE,\n      drawer: {\n        left: true,\n      }\n    })\n  }\n\n  togglePlay() {\n    const {isPlay} = this.props.songs;\n    store.dispatch({\n      type: SONG_CHANGE,\n      songs: {\n        isPlay: !isPlay,\n      }\n    })\n  }\n\n  onPlayNext() {\n    let {activeIndex, songList} = this.props.songs;\n    activeIndex = activeIndex === songList.length - 1 ? 0 : activeIndex + 1;\n    store.dispatch({\n      type: SONG_CHANGE,\n      songs: {\n        activeIndex,\n      }\n    })\n  }\n\n  onDislikeSong() {\n    const {userId} = this.props.users;\n    const {activeIndex, songList} = this.props.songs;\n    const {name} = songList && songList[activeIndex];\n    const songId = songList && songList[activeIndex].id;\n    Services.songServices.dislikeSong(userId, songId)\n      .then(res => {\n        if (res.id) {\n          songList.splice(activeIndex, 1);\n          store.dispatch({\n            type: SNACKBAR_CHANGE,\n            snackbar: {\n              open: true,\n              msg: `\"${name}\"有毒，已加入隔离区`,\n            }\n          });\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: songList,\n              activeIndex: activeIndex === songList.length - 1 ? 0 : (activeIndex + 1),\n            }\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      })\n  }\n\n  onToggleCollect() {\n    const {userId} = this.props.users;\n    let {activeIndex, songList, collectSongList} = this.props.songs;\n    const songId = songList[activeIndex].id;\n    Services.songServices.collectSong(userId, songId)\n      .then(async res => {\n        songList[activeIndex].isCollect = !songList[activeIndex].isCollect;\n        if(res.isCollect) {\n          collectSongList.unshift(res);\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: songList,\n              collectSongList: collectSongList,\n            }\n          });\n          store.dispatch({\n            type: SNACKBAR_CHANGE,\n            snackbar: {\n              open: true,\n              msg: '收藏成功',\n            }\n          });\n        } else {\n          collectSongList = await Services.songServices.fetchCollectSongs(userId, true);\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: songList,\n              collectSongList: collectSongList,\n            }\n          });\n          store.dispatch({\n            type: SNACKBAR_CHANGE,\n            snackbar: {\n              open: true,\n              msg: '取消收藏成功',\n            }\n          });\n        }\n      });\n  }\n\n  render() {\n    const {songList, activeIndex} = this.props.songs;\n    const name = songList && songList[activeIndex] && songList[activeIndex].name;\n    const author = songList && songList[activeIndex] && songList[activeIndex].author;\n    const pic = songList && songList[activeIndex] && songList[activeIndex].pic;\n    const isCollect = songList && songList[activeIndex] && songList[activeIndex].isCollect;\n    const {isPlay} = this.props.songs;\n    return (\n      <div className={styles.container}>\n        <section className={styles.menuBox}>\n          <span className={`iconfont icon-menu ${styles.icon}`} onClick={this.openMenu.bind(this)}></span>\n        </section>\n        <div className={styles.bg} style={{backgroundImage: `url(${pic})`}}></div>\n        <div className={styles.cover}></div>\n        <section className={styles.contentWrap}>\n          <section className={styles.content}>\n            <span className={styles.songPic}>\n              <span className={isPlay ? `${styles.pic} ${styles.zRotate}`: `${styles.pic}`}\n                style={{backgroundImage: `url(${pic})`}}\n              ></span>\n              <span className={styles.control}>\n                <span className={isPlay ? `iconfont icon-pause ${styles.icon}` : `iconfont icon-play ${styles.icon}`}\n                  onClick={this.togglePlay.bind(this)}\n                ></span>\n              </span>\n            </span>\n            <div>\n              <h3 className={styles.name}>{name}</h3>\n              <p className={styles.author}>{author}</p>\n            </div>\n            <div className={styles.controlBox}>\n              <div className={styles.panelBox}>\n                <div className={styles.item} onClick={this.onDislikeSong.bind(this)}>\n                  <span className={`iconfont icon-trash ${styles.icon}`}></span>\n                </div>\n                <div className={styles.item} onClick={this.onToggleCollect.bind(this)}>\n                  <span className={isCollect ? `iconfont icon-love ${styles.icon} ${styles.iconLoveActive}`: `iconfont icon-love ${styles.icon}`}></span>\n                </div>\n                <div className={styles.item} onClick={this.onPlayNext.bind(this)}>\n                  <span className={`iconfont icon-next ${styles.icon}`}></span>\n                </div>\n              </div>\n            </div>\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    snackbar: store.snackbar,\n    songs: store.songs,\n    users: store.users,\n  }\n}\n\nexport default connect(mapStateToProps)(Index);","import React, {PureComponent} from 'react';\nimport Services from '../../services';\nimport {List, ListItem, ListItemSecondaryAction, ListItemText} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport store from '../../store';\nimport {SNACKBAR_CHANGE} from '../../store/types';\nimport {connect} from 'react-redux';\nimport styles from './index.less';\n\nclass Search extends PureComponent{\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTxt: '',\n      list: [],\n      searchType: 1,\n    }\n  }\n\n  async getWithCollectList(list) {\n    const {userId} = this.props.users;\n    const collectSongs = await Services.songServices.fetchCollectSongs(userId, true);\n    console.log(collectSongs);\n    const collectSongids = collectSongs.map(song => song.songid);\n    list = list.map(song => {\n      const id = song.id;\n      song.isCollect = collectSongids.indexOf(id) !== -1;\n      return song;\n    });\n    return list;\n  }\n\n  searchSong() {\n    if (!this.state.searchTxt.trimLeft()) {\n      return;\n    }\n    const {userId} = this.props.users;\n    const {searchTxt, searchType} = this.state;\n    Services.songServices.search(userId, searchTxt, searchType)\n      .then(async res => {\n        if (res.length){\n          const list = await this.getWithCollectList(res);\n          this.setState({\n            list,\n          })\n        }\n      })\n  }\n\n  onSearchInput(e) {\n    this.setState({\n      searchTxt: e.target.value,\n    });\n  }\n\n  collectSong(songIndex, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    const {userId} = this.props.users;\n    const {list} = this.state;\n    let songInfo = list[songIndex];\n    songInfo.public = 2;\n    songInfo.quality = 2;\n    Services.songServices.addSong({\n      ...songInfo,\n    })\n    .then(res => {\n      if (res.id) {\n        store.dispatch({\n          type: SNACKBAR_CHANGE,\n          snackbar: {\n            open: true,\n            msg: '添加歌曲成功',\n          }\n        });\n      } else {\n        store.dispatch({\n          type: SNACKBAR_CHANGE,\n          snackbar: {\n            open: true,\n            msg: '添加歌曲失败，请重试',\n          }\n        })\n      }\n      return res.id;\n    })\n    .then(id => {\n      Services.songServices.collectSong(userId, id)\n        .then(res => {\n          list[songIndex].isCollect = !list[songIndex].isCollect;\n          this.setState({\n            list: list,\n          });\n          if (res.isCollect) {\n            store.dispatch({\n              type: SNACKBAR_CHANGE,\n              snackbar: {\n                open: true,\n                msg: '收藏成功',\n              }\n            });\n          } else {\n            store.dispatch({\n              type: SNACKBAR_CHANGE,\n              snackbar: {\n                open: true,\n                msg: '取消收藏成功',\n              }\n            });\n          }\n        })\n    })\n    .catch(err => {\n      store.dispath({\n        type: SNACKBAR_CHANGE,\n        snackbar: {\n          open: true,\n          msg: err.toString(),\n        }\n      })\n    })\n  }\n\n  getAuthorName(artists) {\n    if(artists.length < 1){\n      return '';\n    }\n    if (artists.length > 2) {\n      artists = artists.slice(0, 2);\n    }\n    const names = artists.map(artist => artist.name);\n    return names.join(',');\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={styles.searchBox}>\n          <div className={styles.inputWrap}>\n            <TextField\n              fullWidth\n              id=\"name\"\n              label=\"输入歌名或歌手名字\"\n              onInput={this.onSearchInput.bind(this)}\n              margin=\"normal\"\n            />\n          </div>\n          <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.searchSong.bind(this)}>\n              搜索\n            </Button>\n          </div>\n        </div>\n        <div className={styles.cardWrap}>\n          <List>\n            {this.state.list.map((item, index) => (\n              <section className={styles.listBox} key={index}>\n                <ListItem dense button>\n                  <Avatar style={{marginRight: '10px'}} alt=\"avatar\" src={item.album.picUrl} />\n                  <div>\n                    <div>\n                      <ListItemText primary={item.name}></ListItemText>\n                    </div>\n                    <div>\n                      <ListItemText primary={this.getAuthorName(item.artists)}></ListItemText>\n                    </div>\n                  </div>\n                  <ListItemSecondaryAction>\n                    <span \n                      className={item.isCollect ? `iconfont icon-love ${styles.icon} ${styles.iconLoveActive}` : `iconfont icon-love ${styles.icon} ${styles.iconLoveNormal}`}\n                      onClick={this.collectSong.bind(this, index)}\n                      />\n                    <a href={`https://music.163.com/song/media/outer/url?id=${item.id}.mp3`}>\n                      <span className={`iconfont icon-download ${styles.icon} ${styles.download}`}></span>\n                    </a>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              </section>\n            ))}\n          </List>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    snackbar: store.snackbar,\n    users: store.users,\n  }\n}\n\nexport default connect(mapStateToProps)(Search);","import React, {PureComponent} from 'react';\nimport {ListItem, ListItemSecondaryAction, ListItemText} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport {connect} from 'react-redux';\nimport Services from '../../services/index';\nimport {SNACKBAR_CHANGE} from '../../store/types';\nimport store from '../../store';\nimport styles from './index.less';\n\nclass Dislike extends PureComponent{\n  state = {\n    checkedIds: [],\n    dislikeList: [],\n  }\n\n  handleToggle = id => () => {\n    const {checkedIds} = this.state;\n    const currentIndex = checkedIds.indexOf(id);\n    const newChecked = [...checkedIds];\n    if (currentIndex === -1) {\n      newChecked.push(id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    this.setState({\n      checkedIds: newChecked,\n    })\n  }\n\n  fetchDislikeSongs() {\n    const {userId} = this.props.users;\n    Services.songServices.fetchDislikeSongs(userId)\n      .then(res => {\n        this.setState({\n          dislikeList: res,\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.fetchDislikeSongs();\n  }\n\n  reshowDislikeSongs() {\n    const {userId} = this.props.users;\n    const {checkedIds} = this.state;\n    Services.songServices.undoDislikeSong(userId, checkedIds)\n      .then(async res => {\n        await this.fetchDislikeSongs();\n        store.dispatch({\n          type: SNACKBAR_CHANGE,\n          snackbar: {\n            open: true,\n            msg: '已成功将它们移出隔离区'\n          }\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        {this.state.dislikeList.length\n        ? <section>\n          <h4 className={styles.title}>拯救曾经被你隔离的它们</h4>\n          {this.state.dislikeList.map((item) => (\n            <section key={item.id}>\n              <ListItem dense button>\n                <Avatar style={{marginRight: '10px'}} alt=\"avatar\" src={item.pic} />\n                <div>\n                  <div>\n                    <ListItemText primary={item.name} />\n                  </div>\n                  <div>\n                    <ListItemText primary={item.author}></ListItemText>\n                  </div>\n                </div>\n                <ListItemSecondaryAction>\n                  <Checkbox\n                    onChange={this.handleToggle(item.id)}\n                    checked={this.state.checkedIds.indexOf(item.id) !== -1}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            </section>\n          ))}\n          <section className={styles.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.reshowDislikeSongs.bind(this)}>\n              治愈\n            </Button>\n          </section>\n        </section>\n        : <h4 className={styles.title}>隔离区空空如也...</h4>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    users: store.users,\n  }\n}\n\nexport default connect(mapStateToProps)(Dislike);","import React, { PureComponent } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport store from '../../store/index';\nimport {connect} from 'react-redux'\n\nclass PositionedSnackbar extends PureComponent{\n  constructor(props){\n    super(props);\n    this.state = {\n      timer: null,\n      seconds: this.props.snackbar.seconds,\n    }\n  }\n\n  handleClose(){\n    this.setState({\n      open: false,\n    });\n  }\n\n  render(){\n    const {vertical, horizontal, open, msg, seconds} = this.props.snackbar;\n    if(open && !this.state.timer){\n      let timer = setTimeout(() => {\n        store.dispatch({\n          type: 'SNACKBAR_CHANGE',\n          snackbar: {\n            open: false,\n            seconds: 2000,\n          }\n        });\n        this.setState({\n          timer: null,\n        });\n      }, seconds);\n      this.setState({\n        timer: timer,\n      })\n    }\n    return(\n      <div>\n        <Snackbar\n          anchorOrigin={{vertical, horizontal}}\n          open={open}\n          onClose={this.handleClose.bind(this)}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{msg}</span>}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    snackbar: store.snackbar,\n  }\n}\n\nexport default connect(mapStateToProps)(PositionedSnackbar);","import React, { PureComponent } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport store from \"../../store/index\";\r\nimport {SONG_CHANGE} from \"../../store/types\";\r\n\r\nclass Audio extends PureComponent {\r\n    onAudioEnded() {\r\n        let {activeIndex, songList} = this.props.songs;\r\n        activeIndex = activeIndex === songList.length - 1 ? 0 : activeIndex + 1;\r\n        store.dispatch({\r\n            type: SONG_CHANGE,\r\n            songs: {\r\n                activeIndex\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {activeIndex, songList, isPlay} = this.props.songs;\r\n        if(isPlay){\r\n            setTimeout(() => {\r\n                this.audio && this.audio.play();\r\n            }, 0);\r\n        } else {\r\n            setTimeout(() => {\r\n                this.audio && this.audio.pause();\r\n            }, 0);\r\n        }\r\n        return (\r\n            <div>\r\n                <audio \r\n                    ref={(audio) => {this.audio = audio;}}\r\n                    src={songList && songList[activeIndex] && songList[activeIndex].music}\r\n                    onEnded={this.onAudioEnded.bind(this)} \r\n                />\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        songs: store.songs\r\n    }\r\n};\r\n\r\nAudio = connect(mapStateToProps)(Audio);\r\n\r\nexport default Audio\r\n","import React, { PureComponent } from 'react';\nimport {withStyles} from '@material-ui/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {connect} from 'react-redux';\nimport {DRAWER_CHANGE, SNACKBAR_CHANGE, SONG_CHANGE, USER_CHANGE} from '../../store/types';\nimport store from '../../store/index';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Services from '../../services/index';\nimport {withRouter, Link} from 'react-router-dom';\nimport styles from './index.less';\n\nconst drawerStyle = {\n  list :{\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  }\n};\n\nclass MenuDrawer extends PureComponent{\n  state = {\n    left: this.props.drawer.left,\n    open: true,\n  }\n\n  toggleDrawer = (open) => () => {\n    store.dispatch({\n      type: DRAWER_CHANGE,\n      drawer: {\n        left: open,\n      }\n    });\n  }\n\n  toggleChannelItem = (e) => {\n    e.stopPropagation();\n    this.setState({\n      open: !this.state.open,\n    })\n  }\n\n  logout() {\n    const {isPlay} = this.props.songs;\n    if (isPlay) {\n      store.dispatch({\n        type: SONG_CHANGE,\n        songs: {\n          songList: [],\n          activeIndex: 0,\n          qualitySongList: [],\n          customiseSongList: [],\n          collectSongList: [],\n          isPlay: false,\n        }\n      });\n    }\n    Services.userServices.logout()\n      .then(res => {\n        store.dispatch({\n          type: USER_CHANGE,\n          users: {\n            userId: '',\n          }\n        });\n        this.props.history.push('/login');\n        store.dispatch({\n          type: SNACKBAR_CHANGE,\n          users: {\n            open: true,\n            msg: '登出成功',\n            seconds: 2000,\n          }\n        })\n      })\n  }\n\n  showSnackbar(info){\n    store.dispatch({\n      type: SNACKBAR_CHANGE,\n      snackbar: {\n        open: true,\n        msg: `当前${info.channelName}共${info.activeChannelTotal}首歌`,\n      }\n    })\n  }\n\n  changeChannel(index) {\n    let {qualitySongList, customiseSongList, collectSongList} = this.props.songs;\n    const mapper = {\n      0: {\n        path: '/index/quality',\n        channelName: '精选FMHz',\n        activeChannelTotal: qualitySongList.length,\n        action: function() {\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: qualitySongList,\n              activeIndex: 0,\n            }\n          })\n        }\n      },\n      1: {\n        path: '/index/customise',\n        channelName: '私人FMHz',\n        activeChannelTotal: customiseSongList.length,\n        action: function() {\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: customiseSongList,\n              activeIndex: 0,\n            }\n          })\n        }\n      },\n      2: {\n        path: '/index/collect',\n        channelName: '红心FMHz',\n        activeChannelTotal: collectSongList.length,\n        action: function() {\n          store.dispatch({\n            type: SONG_CHANGE,\n            songs: {\n              songList: collectSongList,\n              activeIndex: 0,\n            }\n          })\n        }\n      },\n    }\n    this.props.history.push(mapper[index].path);\n    mapper[index].action();\n    this.showSnackbar(mapper[index]);\n  }\n\n  openSettings() {\n    store.dispatch({\n      type: SNACKBAR_CHANGE,\n      snackbar: {\n        open: true,\n        msg: '功能开发中',\n      }\n    })\n  }\n\n  render() {\n    const {left} = this.props.drawer;\n    const sideList = (\n      <div>\n        <List component=\"nav\">\n          <ListItem button onClick={this.toggleChannelItem}>\n            <span className={`iconfont icon-radio ${styles.icon}`}></span>\n            <ListItemText primary=\"频道\" />\n            {this.state.open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              <ListItem button onClick={this.changeChannel.bind(this, 0)}>\n                <ListItemText inset primary=\"精选Hz\"></ListItemText>\n              </ListItem>\n              <ListItem button onClick={this.changeChannel.bind(this, 1)}>\n                <ListItemText inset primary=\"定制Hz\"></ListItemText>\n              </ListItem>\n              <ListItem button onClick={this.changeChannel.bind(this, 2)}>\n                <ListItemText inset primary=\"红心Hz\"></ListItemText>\n              </ListItem>\n            </List>\n          </Collapse>\n          <Link to=\"/dislike\" className={styles.link}>\n            <ListItem button>\n              <span className={`iconfont icon-virus ${styles.icon}`}></span>\n              <ListItemText primary=\"隔离区\"></ListItemText>\n            </ListItem>\n          </Link>\n          <Link to=\"/guide\" className={styles.link}>\n            <ListItem button>\n              <span className={`iconfont icon-customise ${styles.icon}`}></span>\n              <ListItemText primary=\"定制标签\"/>\n            </ListItem>\n          </Link>\n          <Link to=\"/search\" className={styles.link}>\n            <ListItem button>\n              <span className={`iconfont icon-search ${styles.icon}`}></span>\n              <ListItemText primary=\"搜索\"/>\n            </ListItem>\n          </Link>\n          <ListItem button onClick={this.openSettings.bind(this)}>\n            <span className={`iconfont icon-setting ${styles.icon}`}></span>\n            <ListItemText primary=\"设置\"/>\n          </ListItem>\n          <ListItem button onClick={this.logout.bind(this)}>\n            <span className={`iconfont icon-logout ${styles.icon}`}></span>\n            <ListItemText primary=\"登出\"/>\n          </ListItem>\n        </List>\n      </div>\n    )\n    return (\n      <div>\n        <Drawer open={left} onClose={this.toggleDrawer(false)}>\n          <div \n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggleDrawer(false)}\n            onKeyDown={this.toggleDrawer(false)}\n          >\n            {sideList}\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    drawer: store.drawer,\n    songs: store.songs,\n  }\n}\n\nMenuDrawer = withStyles(drawerStyle)(MenuDrawer);\nMenuDrawer = withRouter(MenuDrawer);\n\nexport default connect(mapStateToProps)(MenuDrawer);","import React from 'react';\nimport Login from '../pages/Login';\nimport Guide from '../pages/Guide';\nimport Index from '../pages/Index';\nimport Search from '../pages/Search';\nimport Dislike from '../pages/Dislike';\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport Snackbar from '../components/Snackbar';\nimport Audio from '../components/Audio';\nimport MenuDrawer from '../components/MenuDrawer';\nimport Services from '../services/index';\n\nconst PrimaryLayout = () => {\n  const isLogin = Services.userServices.checkIsLogin();\n  return (\n    <div>\n      <MenuDrawer/>\n      <Snackbar/>\n      <Audio/>\n      <Switch>\n        <Route\n          path='/'\n          exact\n          render={props => {\n            return isLogin ? <Redirect to=\"/index/quality\" /> : <Login/>;\n          }}\n        />\n        <Route\n          path=\"/index\"\n          exact\n          render={props => {\n            return isLogin ? <Redirect to=\"/index/quality\" /> : <Login/>\n          }}\n        />\n        <Route\n          path=\"/login\"\n          component={Login}\n        />\n        <Route\n          path=\"/guide\"\n          render={props => {\n            return isLogin ? <Guide/> : <Login/>\n          }}\n        />\n        <Route\n          path=\"/dislike\"\n          render={props => {\n            return isLogin ? <Dislike/> : <Login/>\n          }}\n        />\n        <Route\n          path=\"/search\"\n          render={props => {\n            return isLogin ? <Search/> : <Login/>;\n          }}\n        />\n        <Route\n          path=\"/index/:fmType\"\n          render={props => {\n            return isLogin ? <Index/> : <Login/>\n          }}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nconst App = () => (\n  <BrowserRouter>\n    <PrimaryLayout></PrimaryLayout>\n  </BrowserRouter>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store/index';\nimport App from './router/index';\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#ffc1c1',\n      main: '#ed8281',\n      dark: '#9c1b18',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#8b81ed',\n      dark: '#ba000d',\n      contrastText: '#fff',\n    },\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <App/>\n    </MuiThemeProvider>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3-7p657Rmgf727TAxzefms\",\"cover\":\"_1OtGpjWPCBPkqG4YEzlds3\",\"bgImg\":\"dW4e3b6jIj0zV4y_QjiLZ\",\"logoBox\":\"_3sTR7v-T12HCKNxQF3iilL\",\"content\":\"_1lKzc7RiA0wGVClFbnMsbn\",\"form\":\"_1NGuViQP9fT-mFjTWNklY9\",\"icon\":\"_3wH5BD9F_DgQdnOUppMDM4\",\"btnBox\":\"_3Ty4OXw2VX732yomC8d5jk\",\"btn\":\"wsuwYU_U4LT2BgYo4j5dx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"e4HsVihKCPnIloOkIUAh8\",\"inputWrap\":\"_26qTOnp4mflBcHyl10vNm\",\"listBox\":\"_1jGhktQ-jt5nosiHJJE2-S\",\"icon\":\"_2soRO4XvTobj6rrIKlG5sF\",\"iconLoveNormal\":\"_2TK3qo3r7PPIxpfrC_Cu4z\",\"iconLoveActive\":\"_VXdmvParAo2L24DPEoVJ\",\"download\":\"_1NYyvp3Zw2thfGa9mm4q-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"am9-DRDgldcptZm3tunm5\",\"link\":\"_1OfTnwWSTd8gvZZCLb6GSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3YxU8Ez70mk-O79C52U0Mk\",\"title\":\"_3kfPAvCX7IfA8jSaIqd42A\",\"list\":\"JMwLAIEHLZ5yVsqKY-gvb\",\"icon\":\"_2U_E7tjuGEOlQ_Lvw4yKJl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3nx70ClYW4eJKJOXteUMOM\",\"title\":\"E8YFO-UBGHfKIqEV4NzRz\",\"btnBox\":\"_3joDvN9u4AENCxFVjbHvnq\"};"],"sourceRoot":""}